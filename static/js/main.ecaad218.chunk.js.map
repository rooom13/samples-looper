{"version":3,"sources":["components/Themes.js","components/globalStyles.js","utils/functions.js","components/Turntable/Disk/Animation.js","components/Buttons.js","components/VolumeRange.js","components/Turntable/Disk/DiskInterface.js","components/Turntable/Disk/Disk.js","components/Turntable/Turntable.js","components/Switch.js","components/Rack.js","components/ProjectJSONEdit.js","App.js","serviceWorker.js","index.js"],"names":["lightTheme","body","text","button","buttonActive","buttonText","backgroundSwitch","shadow","darkTheme","GlobalStyles","createGlobalStyle","theme","scale","num","in_min","in_max","out_min","out_max","CanvasWrapper","Component","styled","div","props","width","height","CanvasBack","canvas","CanvasFront","BaseButton","TypicalButton","isActive","EmojiButton","emojiActive","emojiInactive","DeleteButton","PauseButton","MuteButton","RestartButton","LoopButton","AddButton","style","color","fontWeight","fontSize","LightsButton","SaveButton","VolumeRange","type","min","max","step","DiskInterface","state","isRestarting","this","togglePaused","toggleMuted","toggleLoop","isTurntableSelected","isPaused","isLoop","isMuted","progress","isSelected","index","selectDisk","duration","playbackRate","volume","isAudioLoaded","rotation","buffer","idSrc","Wrapper","Row","Num","onClick","ev","Column","title","restart","Vinyl","src","transform","setLeftDiskSwitch","children","setRightDiskSwitch","Duration","onChange","handleDuration","value","handlePlaybackRate","target","handleVolumeChange","textAlign","toFixed","img","input","Disk","_isComponentMounted","play","srcNode","actx","createBufferSource","onended","connect","gainNode","loop","offset","pausedAt","originalDuration","start","startedAt","currentTime","setState","stop","resetTime","fn","elapsed","setTimeout","shouldKeepPlaying","tick","requestAnimationFrame","bind","shouldMute","setMute","gain","setValueAtTime","e","isNaN","tempo","onRef","window","AudioContext","webkitAudioContext","createGain","destination","fetch","then","resp","arrayBuffer","decodeAudioData","undefined","name","margin","removeDisk","top","right","position","keyEventName","KEYPRESS","keyValue","onKeyHandle","Turntable","selectedDisk","newDiskName","newDiskSrc","disks","disk","preventDefault","diskCount","length","playAll","stopAll","Object","keys","map","diskIndex","setMuteAll","splice","onNewDiskClicked","addDisk","handleFormChange","field","Title","removeTurntable","KEYDOWN","code","toString","i","setDiskSwitch","turntableIndex","ref","display","StyledInput","placeholder","disabled","Switch","leftDisk","rightDisk","diskName","turntableName","handleSwitchVolumeChange","DiskSummary","Rack","selectTurntable","turntable","turntableCount","turntables","selectedTurntable","toggleMasterPaused","isMasterPaused","toggleMasterMuted","isMasterMuted","toggleMasterRestart","whichDisk","rightSwitchDisk","leftSwitchDisk","leftSwitchDiskVolume","rightSwitchDiskVolume","handleNewTurnTableNameChange","newTurntableName","onAddTurntableClicked","addTurntable","DEFAULT_LEFTSWITCHDISK_TURNTABLE","DEFAULT_RIGHTSWITCHDISK_TURNTABLE","DEFAULT_LEFTSWITCHDISK_DISK_NAME","DEFAULT_RIGHTSWITCHDISK_DISK_NAME","marginBottom","TurntablesWrapper","SwitchWrapper","StyledTextarea","textarea","ProjectJSONEdit","isInputValid","projectStr","handleProjectChange","onApplyClicked","App","project","isProjectJSONEditShown","selectedProject","isDarkTheme","getSavedMusic","JSON","parse","localStorage","setTurntables","setProject","stringify","handleturntablesChange","push","replace","toggleProjectJSONEdit","toggleTheme","handleSelectedProjectChange","demoProjects","flexDirection","padding","fontFamily","projectName","float","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ecaad218.chunk.js","sourcesContent":["export const lightTheme = {\n    body: 'white',\n    text: 'black',\n    button: '#FFF',\n    buttonActive: '#bfbfbf',\n    buttonText: 'black',\n    backgroundSwitch: 'lightgray',\n    shadow: 'black'\n}\nexport const darkTheme = {\n    body: 'black',\n    text: 'white',\n    button: 'dimgray',\n    buttonActive: '#e64040',\n    buttonText: 'white',\n    backgroundSwitch: '#383838',\n    shadow: 'white'\n\n}","import { createGlobalStyle } from \"styled-components\"\n\nexport const GlobalStyles = createGlobalStyle`\n  html {\n    height: 100%;\n  }\n  body {\n    height: 100%;\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n\n    font-family: verdana;\n  }\n\n  #root { height: 100% };\n\n  /* Scroll-bars */\n  ::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\n    background-color: ${({ theme }) => theme.body};\n  }\n  \n  ::-webkit-scrollbar {\n    width: 6px;\n    background-color: dimgrey;\n  }\n  \n  ::-webkit-scrollbar-thumb {\n    background-color: dimgrey;\n  }\n\n  ::-webkit-scrollbar-corner { background: dimgrey }\n\n  /* dropdown menu */\n\n  select {\n    padding: 0.25rem;\n    border-radius: 5px;\n  }\n`","export const scale = (num, in_min, in_max, out_min, out_max) => {\n    return (num - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n}","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport { scale } from '../../../utils/functions';\n\nclass Animation extends Component {\n\n    img = new Image('./public/sprites/disk.png')\n\n    componentDidMount() {\n        this.paintWave();\n    }\n    componentDidUpdate() {\n        this.paintBar();\n    }\n\n    paintBar() {\n\n        const progress = this.props.progress\n        let canvas = document.getElementById(`${this.props.idSrc}f`)\n        let ctx = canvas.getContext(\"2d\");\n\n        const WIDTH = canvas.width;\n        const HEIGHT = canvas.height;\n\n        ctx.clearRect(0, 0, WIDTH, HEIGHT);\n\n\n        ctx.fillStyle = 'red';\n\n        const xsize = 1\n\n        // const salto = Math.floor(channel0.length / amount)\n\n        const x = scale(progress, 0, 100, 0, WIDTH)\n\n        ctx.fillRect(x, 0, xsize, HEIGHT)\n\n        // const value1 = Math.abs(channel0[i * salto]) * HEIGHT / 2\n        // const value2 = Math.abs(channel1[i * salto]) * HEIGHT / 2\n\n        // ctx.fillRect(i * xsize, HEIGHT / 2, xsize, - (value1 + minSize))\n        // ctx.fillRect(i * xsize, HEIGHT / 2, xsize, + (value2 + minSize))\n    }\n\n    paintWave() {\n\n        const buffer = this.props.buffer\n        let canvas = document.getElementById(`${this.props.idSrc}b`)\n        let ctx = canvas.getContext(\"2d\");\n        const channel0 = buffer.getChannelData(0)\n        const channel1 = buffer.getChannelData(1)\n        const WIDTH = canvas.width;\n        const HEIGHT = canvas.height;\n\n        ctx.clearRect(0, 0, WIDTH, HEIGHT);\n\n\n        const xsize = 1\n        const amount = WIDTH / xsize\n        const salto = Math.floor(channel0.length / amount)\n\n        // ctx.fillStyle = 'black';\n        // ctx.fillRect(0, 0, WIDTH, HEIGHT);\n\n        ctx.fillStyle = 'black';\n        for (var i = 0; i < channel0.length - salto; i++) {\n            const value1 = Math.abs(channel0[i * salto]) * HEIGHT / 2\n            const value2 = Math.abs(channel1[i * salto]) * HEIGHT / 2\n\n            ctx.fillRect(i * xsize, HEIGHT / 2, xsize, - (value1))\n            ctx.fillRect(i * xsize, HEIGHT / 2, xsize, + (value2))\n        }\n    }\n\n    render() {\n        const { width, height, idSrc } = this.props;\n        return (\n            <CanvasWrapper width={width}\n                height={height}>\n\n                <CanvasBack\n                    id={idSrc + 'b'}\n                    width={width}\n                    height={height}\n                />\n                <CanvasFront\n                    id={idSrc + 'f'}\n                    width={width}\n                    height={height}\n                />\n            </CanvasWrapper>\n        );\n    }\n}\n\nconst CanvasWrapper = styled.div`\n    position: relative;\n    ${props => 'width: ' + props.width + 'px;height: ' + props.height + 'px;'}\n`\n\nconst CanvasBack = styled.canvas`\n    position: absolute; \n    left: 0; \n    top: 0; \n    z-index: 0;  \n`\n\nconst CanvasFront = styled.canvas`\n    position: absolute; \n    left: 0; \n    top: 0; \n    z-index: 1;  \n`\n\n\nexport default Animation","import styled from 'styled-components'\n\n\nconst BaseButton = styled.button`\n    cursor: pointer;\n`\n\nexport const TypicalButton = styled(BaseButton)`\n    color: ${({ theme }) => theme.buttonText};\n    background-color: ${({ isActive, theme }) => isActive ? theme.buttonActive : theme.button};\n    border-radius: 5px;\n`\n\nconst EmojiButton = styled(BaseButton)`\n    border: none;\n    background: none;\n    ::before {\n        content: \"${props => props.isActive ? props.emojiActive : props.emojiInactive}\";\n    }\n    font-size: 1rem;\n\n    &:hover {\n        font-style: italic;\n    }\n`\n\nexport const DeleteButton = (props) => {\n    return <EmojiButton {...props} emojiActive={'❌'} isActive />\n}\n\nexport const PauseButton = (props) => {\n    return <EmojiButton {...props} emojiActive={'▶️'} emojiInactive={'⏸️'} />\n}\n\nexport const MuteButton = (props) => {\n    return <EmojiButton {...props} emojiActive={'🔇'} emojiInactive={'🔊'} />\n}\n\nexport const RestartButton = (props) => {\n    return <EmojiButton {...props} emojiActive={'💥'} emojiInactive={'🔄'} />\n}\n\nexport const LoopButton = (props) => {\n    return <EmojiButton {...props} emojiActive={'🔁'} isActive />\n}\n\nexport const AddButton = (props) => {\n    return <EmojiButton {...props} emojiActive={'+'} isActive style={{ color: \"lime\", fontWeight: \"bold\", fontSize: \"x-large\" }} />\n}\n\nexport const LightsButton = (props) => {\n    return <EmojiButton {...props} emojiActive={'🌞'} emojiInactive={'🌙'} />\n}\n\nexport const SaveButton = (props) => {\n    return <EmojiButton {...props} emojiActive={'💾'} isActive />\n}\n\n","import React, { Fragment } from 'react'\n\n\nexport const VolumeRange = (props) => {\n    return <Fragment>🔊<input type=\"range\" min=\"0\" max=\"2\" step=\"0.01\" {...props} /> </Fragment>\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components'\n\nimport Animation from './Animation'\nimport { scale } from '../../../utils/functions';\nimport { TypicalButton, PauseButton, MuteButton, RestartButton, LoopButton } from '../../../components/Buttons'\nimport { VolumeRange } from '../../../components/VolumeRange'\n\n\nclass DiskInterface extends Component {\n\n    state = {\n        isRestarting: false\n    };\n\n    render() {\n\n        const {\n            togglePaused,\n            toggleMuted,\n            toggleLoop,\n            isTurntableSelected,\n            isPaused,\n            isLoop,\n            isMuted,\n            progress,\n            isSelected,\n            index,\n            selectDisk,\n            duration,\n            playbackRate,\n            volume,\n            isAudioLoaded,\n            isRestarting,\n            buffer,\n            idSrc\n        } = this.props\n\n\n        const isAnimation = false\n        const rotation = scale(progress, 0, 100, 0, 360)\n\n        return (\n            <Wrapper isSelected={isSelected} isTurntableSelected={isTurntableSelected}>\n                <Row>\n                    <Num onClick={(ev) => selectDisk(ev, index - 1)}> {index}</Num >\n                    <Column>\n                        <PauseButton title=\"pause\" onClick={togglePaused} isActive={isPaused} />\n                        <RestartButton title=\"restart\" onClick={this.props.restart} isActive={isRestarting} />\n                    </Column>\n                    <Column>\n                        {isAudioLoaded && isAnimation ?\n                            <Animation idSrc={idSrc} buffer={buffer} isPaused={isPaused} progress={progress} width={120} height={120} />\n                            :\n                            <Vinyl src={isAudioLoaded && \"./sprites/disk.png\"} style={{ transform: `rotate(${rotation}deg)` }} />}\n                    </Column>\n                    <Column>\n                        <MuteButton title=\"mute\" onClick={toggleMuted} isActive={isMuted} />\n                        <LoopButton title=\"toggle loop\" onClick={toggleLoop} isActive={isLoop} />\n                    </Column>\n                    <Column>\n                        <TypicalButton title=\"send to Switch L\" onClick={this.props.setLeftDiskSwitch} children={'🢂 L'} />\n                        <TypicalButton title=\"send to Switch R\" onClick={this.props.setRightDiskSwitch} children={'🢂 R'} />\n                    </Column>\n                    <Column>\n                        <Duration onChange={this.props.handleDuration} type={\"number\"} value={duration} />\n                        <Duration onChange={this.props.handlePlaybackRate} type={\"number\"} value={playbackRate} step=\"0.001\" />\n                        <Row>\n                            <TypicalButton onClick={() => this.props.handlePlaybackRate({ target: { value: this.props.playbackRate * 0.5 } })} children={'x0.5'} />\n                            <TypicalButton onClick={() => this.props.handlePlaybackRate({ target: { value: this.props.playbackRate * 2 } })} children={'x2'} />\n                        </Row>\n                    </Column>\n                </Row>\n                <Row>\n                    <VolumeRange volume={volume} onChange={this.props.handleVolumeChange} value={volume} />\n                    <span style={{ fontSize: \"0.75rem\", width: \"3rem\", textAlign: \"right\" }}>{(volume * 100).toFixed()} %</span>\n                </Row>\n            </Wrapper>\n        )\n    }\n}\n\nconst vinylSize = \"4.5rem\";\n\nconst Vinyl = styled.img`\n    width: ${vinylSize};\n    transform: rotate(${(props => props.rotation)}deg);\n`\nconst Duration = styled.input`\n    border: 1px solid black;\n    padding: 0.25rem;    \n    width: 5rem;\n`\n\nconst Num = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 1rem;\n    height: 1rem;\n    background-color: black;\n    border-radius: 50%;\n    padding: 1rem;\n    color: white;\n`\n\n\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: 0.25rem;\n`\n\nconst Row = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst Wrapper = styled.div`\n    border-radius: 5px;\n    padding: 1rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: ${props => props.isSelected ? props.isTurntableSelected ? 'brown' : 'grey' : 'dimgrey'};\n    box-shadow: 0px 0px 6px 1px ${({ theme }) => theme.shadow};\n`\n\n\nexport default DiskInterface","import React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\nimport KeyHandler, { KEYPRESS } from 'react-key-handler'\nimport DiskInterface from './DiskInterface'\nimport { DeleteButton } from '../../Buttons'\nimport { scale } from '../../../utils/functions'\n// import { analyze } from 'web-audio-beat-detector';\n\nclass Disk extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            progress: 0,\n            isPaused: true,\n            isMuted: false,\n            isLoop: true,\n            volume: 1,\n            playbackRate: 1,\n            originalDuration: 0,\n            duration: 0,\n            currentTime: 0,\n            tempo: null\n        };\n        this.startedAt = 0\n        this.pausedAt = 0\n    }\n\n    _isComponentMounted = false\n\n    componentDidMount() {\n        this.props.onRef(this)\n        this._isComponentMounted = true\n        //web audio API\n        this.actx = new (window.AudioContext || window.webkitAudioContext)()\n        this.gainNode = this.actx.createGain()\n        this.gainNode.connect(this.actx.destination)\n        fetch(this.props.src, { \"mode\": \"cors\" })\n            .then((resp) => resp.arrayBuffer())\n            .then(buffer => this.actx.decodeAudioData(buffer, buffer => {\n                this.buffer = buffer\n                this.setState({\n                    isAudioLoaded: true,\n                    originalDuration: buffer.duration,\n                    duration: buffer.duration\n                })\n                // analyze(this.buffer)\n                //     .then((tempo) => {\n                //         this.setState({ tempo })\n                //     })\n            }))\n        requestAnimationFrame(this.tick.bind(this));\n    }\n\n    componentWillUnmount() {\n        this.props.onRef(undefined)\n        this._isComponentMounted = false\n    }\n\n    play = () => {\n        if (!this.state.isPaused) return\n\n        delete this.srcNode\n        this.srcNode = this.actx.createBufferSource();  // create audio source\n        this.srcNode.onended = () => {\n            // this.setState({ isPaused: true })\n        }\n        this.srcNode.buffer = this.buffer;\n\n        // use decoded buffer\n        this.srcNode.connect(this.gainNode);    // create output\n        this.srcNode.loop = this.state.isLoop;\n        this.srcNode.playbackRate.value = this.state.playbackRate;\n\n        const offset = this.pausedAt % this.state.originalDuration\n        this.srcNode.start(0, offset)\n        this.startedAt = this.actx.currentTime - offset\n        this.setState({ isPaused: false })\n    }\n\n    stop = (resetTime = false, fn = null) => {\n        if (!this.srcNode) return\n        const elapsed = resetTime ? 0 : this.actx.currentTime - this.startedAt\n        this.srcNode.stop()\n        this.pausedAt = elapsed\n        this.setState({ isPaused: true }, fn)\n    }\n\n    restart = () => {\n        if (!this.srcNode) return;\n        this.setState({ isRestarting: true })\n        setTimeout(() => this.setState({ isRestarting: false }), 50)\n        this.setState({\n            currentTime: 0,\n        })\n        const shouldKeepPlaying = !this.state.isPaused\n        this.stop(true, shouldKeepPlaying ? this.play : null)\n    }\n\n    tick = () => {\n\n        if (!this._isComponentMounted) return;\n\n        if (!this.state.isPaused) {\n            const currentTime = this.actx.currentTime - this.startedAt\n\n            this.setState({ currentTime: currentTime % this.state.duration })\n        }\n        const progress = scale(this.state.currentTime, 0, this.state.originalDuration, 0, 100) * this.state.playbackRate\n        this.setState({ progress });\n\n        requestAnimationFrame(this.tick.bind(this));\n    }\n\n    togglePaused = () => {\n        if (!this.state.isAudioLoaded) return;\n        if (this.state.isPaused) this.play()\n        else this.stop()\n    }\n\n    toggleLoop = () => {\n        if (this.srcNode)\n            this.srcNode.loop = !this.state.isLoop;\n\n        this.setState({\n            isLoop: !this.state.isLoop\n        })\n    }\n\n    toggleMuted = () => {\n        const shouldMute = !this.state.isMuted\n        this.setMute(shouldMute)\n    }\n\n    setMute = (shouldMute) => {\n        const volume = shouldMute ? 0 : this.state.volume\n        this.gainNode.gain.setValueAtTime(volume, this.actx.currentTime);\n        this.setState({\n            isMuted: shouldMute\n        })\n    }\n\n    handleVolumeChange = (e) => {\n        const volume = e.target.value\n        this.gainNode.gain.setValueAtTime(this.state.isMuted ? 0 : volume, this.actx.currentTime);\n        this.setState({\n            volume: volume\n        })\n    }\n\n    handlePlaybackRate = (e) => {\n        const playbackRate = e.target.value\n        if (isNaN(playbackRate)) return\n\n        if (this.srcNode)\n            this.srcNode.playbackRate.value = playbackRate;\n        this.setState({\n            playbackRate: playbackRate,\n            duration: this.state.originalDuration / playbackRate,\n        })\n    }\n\n    handleDuration = (e) => {\n        const duration = e.target.value\n        if (isNaN(duration)) return\n\n        const playbackRate = this.state.originalDuration / duration\n        if (this.srcNode)\n            this.srcNode.playbackRate.value = playbackRate;\n        this.setState({\n            playbackRate: playbackRate,\n            duration: duration,\n        })\n    }\n\n    render() {\n        const { isSelected, index, selectDisk, isTurntableSelected, src, name } = this.props\n        const { isPaused, isMuted, isLoop, progress, duration, isAudioLoaded, isRestarting, volume, playbackRate } = this.state\n        return (\n            <Wrapper>\n                <div style={{ margin: \"0.5rem 0\" }}>{name}</div>{this.state.tempo}\n                <DeleteButton onClick={this.props.removeDisk} style={{ top: \"0\", right: \"0\", position: \"absolute\" }} />\n                {isTurntableSelected && isSelected &&\n                    <Fragment>\n                        <KeyHandler\n                            keyEventName={KEYPRESS}\n                            keyValue={'p'}\n                            onKeyHandle={this.togglePaused}\n                        />\n                        <KeyHandler\n                            keyEventName={KEYPRESS}\n                            keyValue={'m'}\n                            onKeyHandle={this.toggleMuted}\n                        />\n                        <KeyHandler\n                            keyEventName={KEYPRESS}\n                            keyValue={'l'}\n                            onKeyHandle={this.toggleLoop}\n                        />\n                        <KeyHandler\n                            keyEventName={KEYPRESS}\n                            keyValue={'r'}\n                            onKeyHandle={this.restart}\n                        />\n                    </Fragment>}\n                <DiskInterface\n                    setLeftDiskSwitch={this.props.setLeftDiskSwitch}\n                    setRightDiskSwitch={this.props.setRightDiskSwitch}\n                    selectDisk={selectDisk}\n                    index={index}\n                    togglePaused={this.togglePaused}\n                    toggleMuted={this.toggleMuted}\n                    toggleLoop={this.toggleLoop}\n                    handleVolumeChange={this.handleVolumeChange}\n                    handlePlaybackRate={this.handlePlaybackRate}\n                    handleDuration={this.handleDuration}\n                    restart={this.restart}\n                    isRestarting={isRestarting}\n                    isPaused={isPaused}\n                    isLoop={isLoop}\n                    volume={volume}\n                    isMuted={isMuted}\n                    isTurntableSelected={isTurntableSelected}\n                    isSelected={isSelected}\n                    progress={progress}\n                    duration={duration}\n                    playbackRate={playbackRate}\n                    isAudioLoaded={isAudioLoaded}\n                    buffer={isAudioLoaded && this.buffer}\n                    idSrc={src}\n                />\n            </Wrapper>\n        )\n    }\n}\n\nconst Wrapper = styled.div`\n    position: relative;\n    width: max-content;\n`\n\nexport default Disk","import React, { Component, Fragment } from 'react';\nimport styled from 'styled-components'\nimport KeyHandler, { KEYPRESS, KEYDOWN } from 'react-key-handler'\nimport Disk from './Disk/Disk'\nimport { DeleteButton, PauseButton, MuteButton, RestartButton, AddButton } from '../../components/Buttons'\n\nclass Turntable extends Component {\n\n    state = {\n        isPaused: true,\n        isMuted: false,\n        selectedDisk: 0,\n        isSelected: false,\n\n        newDiskName: \"\",\n        newDiskSrc: \"\"\n    }\n\n    disks = []\n\n    componentDidMount() {\n        this.props.onRef(this)\n    }\n\n    componentWillUnmount() {\n        this.props.onRef(undefined)\n        this.disks = []\n    }\n\n    selectDisk = (ev, disk) => {\n        ev.preventDefault()\n        const diskCount = this.props.disks.length - 1\n        if (disk < 0) disk = diskCount\n        else if (disk > diskCount) disk = 0\n\n        this.setState({ selectedDisk: disk })\n    }\n\n    togglePaused = () => {\n        if (this.state.isPaused)\n            this.playAll()\n        else\n            this.stopAll()\n    }\n\n    playAll = () => {\n        Object.keys(this.disks).map(diskIndex => this.disks[diskIndex][\"play\"]())\n        this.setState({ isPaused: false })\n    }\n\n    stopAll = () => {\n        Object.keys(this.disks).map(diskIndex => this.disks[diskIndex][\"stop\"]())\n        this.setState({ isPaused: true })\n    }\n\n    setMuteAll = (shouldMute) => {\n        Object.keys(this.disks).map(diskIndex => this.disks[diskIndex].setMute(shouldMute))\n        this.setState({ isMuted: shouldMute })\n    }\n\n    toggleMuted = () => {\n        this.setMuteAll(!this.state.isMuted)\n    }\n\n    restart = () => {\n        Object.keys(this.disks).map(diskIndex => this.disks[diskIndex].restart())\n    }\n\n    render() {\n        const { selectedDisk, isPaused, isMuted,\n            newDiskName, newDiskSrc\n        } = this.state\n        const { disks, isSelected, name } = this.props\n\n        return (\n            <Wrapper>\n                <Title>{name} {\" \"}\n                    <DeleteButton title=\"delete turntable\" onClick={this.props.removeTurntable} style={{ top: \"0\", right: \"0\", position: \"absolute\" }} />\n                    <PauseButton title=\"pause turntable\" onClick={this.togglePaused} isActive={isPaused} />\n                    <MuteButton title=\"mute turntable\" onClick={this.toggleMuted} isActive={isMuted} />\n                    <RestartButton title=\"restart turntable\" onClick={this.restart} /*isActive={isRestarting}*/ />\n                </Title>\n                {isSelected &&\n                    <Fragment>\n                        <KeyHandler\n                            keyEventName={KEYDOWN}\n                            code={('ArrowDown').toString()}\n                            onKeyHandle={(ev) => this.selectDisk(ev, selectedDisk + 1)}\n                        />\n                        <KeyHandler\n                            keyEventName={KEYDOWN}\n                            code={('ArrowUp').toString()}\n                            onKeyHandle={(ev) => this.selectDisk(ev, selectedDisk - 1)}\n                        />\n                    </Fragment>\n                }\n                {disks && disks.map((disk, i) => {\n                    const { name, src } = disk\n                    const diskIndex = i\n                    return (<Fragment key={i}>\n                        <KeyHandler\n                            keyEventName={KEYPRESS}\n                            keyValue={(diskIndex).toString()}\n                            onKeyHandle={(ev) => this.selectDisk(ev, diskIndex)}\n                        />\n                        <Disk\n                            setLeftDiskSwitch={() => this.props.setDiskSwitch(\"left\", this.props.turntableIndex, diskIndex)}\n                            setRightDiskSwitch={() => this.props.setDiskSwitch(\"right\", this.props.turntableIndex, diskIndex)}\n                            onRef={ref => {\n                                if (ref) this.disks[diskIndex] = ref\n                                else delete this.disks[diskIndex]\n                            }}\n                            selectDisk={this.selectDisk}\n                            src={src}\n                            key={src} // needed for remounting\n                            name={name}\n                            index={diskIndex}\n                            isTurntableSelected={isSelected}\n                            isSelected={selectedDisk === diskIndex}\n                            removeDisk={(() => this.removeDisk(diskIndex))}\n                        />\n                    </Fragment>)\n                })}\n                <div style={{ display: \"flex\" }}>\n                    <StyledInput name=\"newDiskName\" placeholder=\"new disk name\" value={newDiskName} onChange={this.handleFormChange} />\n                    <StyledInput name=\"newDiskSrc\" placeholder=\"new disk src\" value={newDiskSrc} onChange={this.handleFormChange} />\n                    <AddButton title=\"add disk\" disabled={!(newDiskName && newDiskSrc)} onClick={this.onNewDiskClicked} />\n                </div>\n                <div style={{ height: \"13rem\" }} />\n            </Wrapper>\n        )\n    }\n\n    removeDisk = (diskIndex) => {\n        this.disks.splice(diskIndex, 1)\n        this.props.removeDisk(diskIndex)\n    }\n\n    onNewDiskClicked = () => {\n        this.props.addDisk(this.state.newDiskName, this.state.newDiskSrc)\n        this.setState({ newDiskName: \"\", newDiskSrc: \"\" })\n    }\n\n    handleFormChange = (e) => {\n        const field = e.target.name\n        const value = e.target.value\n        this.setState({ [field]: value })\n    }\n}\n\nconst StyledInput = styled.input`\n    color: ${({ theme }) => theme.text};\n    background: none;\n    border: none;\n    font-size: 1rem;\n    width: 100%;\n    \n    ::placeholder {\n        font-style: italic;\n        color: grey;\n        text-decoration: underline;\n    }\n`\n\nconst Title = styled.div`\n    margin: 0.75rem 0;\n    font-size: 1.5rem;\n    font-weight: bolder;\n    font-variant: small-caps;\n`\n\nconst Wrapper = styled.div`\n    position: relative;\n    width: max-content;\n    margin: 0.25rem;\n\n    ::after {\n        height: 10rem;\n    }\n`\n\nexport default Turntable;","import { React } from 'react'\nimport styled from 'styled-components'\nimport { VolumeRange } from './VolumeRange'\n\n\nexport const Switch = (props) => {\n    const { leftDisk, rightDisk } = props\n    return <Wrapper>\n        <Row>\n            <div>\n                <div style={{ fontSize: \"4rem\" }}>🇱</div>\n                <DiskSummary\n                    diskName={leftDisk.diskName}\n                    diskIndex={leftDisk.diskIndex}\n                    turntableName={leftDisk.turntableName}\n                    turntableIndex={leftDisk.turntableIndex}\n                />\n            </div>\n            <div>\n                <h3>Switch</h3>\n                <Row>\n                    <Column>\n                        <span style={{ width: \"3.5rem\", textAlign: \"right\" }}>{(leftDisk.volume * 100).toFixed()} %</span>\n                    </Column>\n                    <Column>\n                        <VolumeRange value={rightDisk.volume} onChange={props.handleSwitchVolumeChange} />\n                    </Column>\n                    <Column>\n                        <span style={{ width: \"3.5rem\", textAlign: \"right\" }}>{(rightDisk.volume * 100).toFixed()} %</span>\n                    </Column>\n                </Row>\n            </div>\n            <div>\n                <div style={{ fontSize: \"4rem\" }}>🇷</div>\n                <DiskSummary\n                    diskName={rightDisk.diskName}\n                    diskIndex={rightDisk.diskIndex}\n                    turntableName={rightDisk.turntableName}\n                    turntableIndex={rightDisk.turntableIndex}\n                />\n            </div>\n        </Row>\n    </Wrapper>\n}\n\n\nconst DiskSummary = (props) => <Column>\n\n    <div>turntable: {props.turntableName} [{props.turntableIndex}]</div>\n    <div>📀 {props.diskName} [{props.diskIndex}]</div>\n</Column>\n\nconst Column = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 0.5rem;\n`\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`\n\nconst Wrapper = styled.div`\n    border-radius: 5px;\n    padding: 1rem;\n    background-color: ${({ theme }) => theme.backgroundSwitch};\n    text-align: center;\n    box-shadow: 0px 0px 6px 1px ${({ theme }) => theme.shadow};\n`","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport KeyHandler, { KEYDOWN } from 'react-key-handler'\nimport Turntable from './Turntable/Turntable'\nimport { MuteButton, RestartButton, PauseButton, AddButton } from '../components/Buttons'\nimport { Switch } from './Switch';\n\nclass Rack extends Component {\n\n    constructor(props) {\n        super(props)\n\n        const { turntables } = this.props\n\n        const DEFAULT_LEFTSWITCHDISK_TURNTABLE_INDEX = 0\n        const DEFAULT_RIGHTSWITCHDISK_TURNTABLE_INDEX = 1\n        const DEFAULT_SWITCHDISK_DISK_INDEX = 0\n\n        const DEFAULT_LEFTSWITCHDISK_TURNTABLE = turntables[DEFAULT_LEFTSWITCHDISK_TURNTABLE_INDEX]\n        const DEFAULT_RIGHTSWITCHDISK_TURNTABLE = turntables[DEFAULT_RIGHTSWITCHDISK_TURNTABLE_INDEX]\n        const DEFAULT_LEFTSWITCHDISK_DISK_NAME = DEFAULT_LEFTSWITCHDISK_TURNTABLE.disks[DEFAULT_SWITCHDISK_DISK_INDEX].name\n        const DEFAULT_RIGHTSWITCHDISK_DISK_NAME = DEFAULT_RIGHTSWITCHDISK_TURNTABLE.disks[DEFAULT_SWITCHDISK_DISK_INDEX].name\n\n        this.state = {\n            selectedTurntable: 0,\n\n            isMasterPaused: true,\n            isMasterMuted: false,\n            leftSwitchDisk: {\n                volume: 1,\n                turntableIndex: DEFAULT_LEFTSWITCHDISK_TURNTABLE_INDEX,\n                diskIndex: DEFAULT_SWITCHDISK_DISK_INDEX,\n                diskName: DEFAULT_LEFTSWITCHDISK_DISK_NAME,\n                turntableName: DEFAULT_LEFTSWITCHDISK_TURNTABLE.name\n            },\n            rightSwitchDisk: {\n                volume: 1,\n                turntableIndex: DEFAULT_RIGHTSWITCHDISK_TURNTABLE_INDEX,\n                diskIndex: DEFAULT_SWITCHDISK_DISK_INDEX,\n                diskName: DEFAULT_RIGHTSWITCHDISK_DISK_NAME,\n                turntableName: DEFAULT_RIGHTSWITCHDISK_TURNTABLE.name\n            },\n            newTurntableName: \"\"\n        }\n\n        this.turntables = []\n    }\n\n    componentWillUnmount() {\n        delete this.turntables\n    }\n\n    selectTurntable = (ev, turntable) => {\n        ev.preventDefault()\n        const turntableCount = this.props.turntables.length - 1\n\n        if (turntable > turntableCount)\n            turntable = 0\n        else if (turntable < 0)\n            turntable = turntableCount\n\n        this.setState({ selectedTurntable: turntable })\n    }\n\n    toggleMasterPaused = () => {\n        const fn = this.state.isMasterPaused ? \"playAll\" : \"stopAll\"\n        Object.keys(this.turntables).map(i => this.turntables[i][fn]())\n        this.setState({ isMasterPaused: !this.state.isMasterPaused })\n    }\n\n    toggleMasterMuted = () => {\n        Object.keys(this.turntables).map(i => this.turntables[i].setMuteAll(!this.state.isMasterMuted))\n        this.setState({ isMasterMuted: !this.state.isMasterMuted })\n    }\n\n    toggleMasterRestart = () => {\n        Object.keys(this.turntables).map(i => this.turntables[i].restart())\n    }\n\n    /**\n     * @param {str: [left | right]} whichDisk \n     */\n    setDiskSwitch = (whichDisk, turntableIndex, diskIndex) => {\n        const { turntables } = this.props\n\n\n        const turntable = turntables[turntableIndex]\n        this.setState({\n            [whichDisk + \"SwitchDisk\"]: {\n                turntableIndex,\n                diskIndex,\n                turntableName: turntable.name,\n                diskName: turntable.disks[diskIndex].name,\n                volume: 1,\n            }\n        })\n    }\n\n    handleSwitchVolumeChange = (e) => {\n\n        const { rightSwitchDisk, leftSwitchDisk } = this.state\n\n        const volume = e.target.value\n\n        const leftSwitchDiskVolume = 1 - volume\n        const rightSwitchDiskVolume = volume\n\n        this.turntables[leftSwitchDisk.turntableIndex].disks[leftSwitchDisk.diskIndex].handleVolumeChange({ target: { value: leftSwitchDiskVolume } })\n        this.turntables[rightSwitchDisk.turntableIndex].disks[rightSwitchDisk.diskIndex].handleVolumeChange(e)\n\n        this.setState({\n            leftSwitchDisk: { ...leftSwitchDisk, volume: leftSwitchDiskVolume },\n            rightSwitchDisk: { ...rightSwitchDisk, volume: rightSwitchDiskVolume }\n        })\n    }\n\n    handleNewTurnTableNameChange = (e) => {\n        const newTurntableName = e.target.value\n        this.setState({ newTurntableName })\n    }\n\n    onAddTurntableClicked = () => {\n        this.props.addTurntable(this.state.newTurntableName)\n        this.setState({ newTurntableName: \"\" })\n    }\n\n    removeTurntable = (turntableIndex) => {\n        this.turntables.splice(turntableIndex, 1)\n        this.props.removeTurntable(turntableIndex)\n    }\n\n    render() {\n\n        const { selectedTurntable, isMasterPaused, isMasterMuted,\n            leftSwitchDisk, rightSwitchDisk,\n            newTurntableName,\n        } = this.state\n\n        const { turntables, title } = this.props\n\n        return (\n            <Wrapper>\n                <h1>{title}</h1>\n                <div style={{ marginBottom: \"0.5rem\" }}>\n                    <PauseButton title=\"pause master\" onClick={this.toggleMasterPaused} isActive={isMasterPaused} />\n                    <MuteButton title=\"mute master\" onClick={this.toggleMasterMuted} isActive={isMasterMuted} />\n                    <RestartButton title=\"restart master\" onClick={this.toggleMasterRestart} />\n                </div>\n                <TurntablesWrapper>\n                    <KeyHandler\n                        keyEventName={KEYDOWN}\n                        code={('ArrowRight').toString()}\n                        onKeyHandle={(ev) => this.selectTurntable(ev, selectedTurntable + 1)}\n                    />\n                    <KeyHandler\n                        keyEventName={KEYDOWN}\n                        code={('ArrowLeft').toString()}\n                        onKeyHandle={(ev) => this.selectTurntable(ev, selectedTurntable - 1)}\n                    />\n                    {turntables && turntables.map((turntable, i) =>\n                        <Turntable\n                            onRef={ref => {\n                                if (ref)\n                                    this.turntables[i] = ref\n                                else delete this.turntables[i]\n                            }}\n                            key={i}\n                            turntableIndex={i}\n                            isSelected={i === selectedTurntable}\n                            setDiskSwitch={this.setDiskSwitch}\n                            name={turntable.name}\n                            disks={turntable.disks}\n                            addDisk={(newDiskName, newDiskSrc) => this.props.addDisk(i, newDiskName, newDiskSrc)}\n                            removeTurntable={() => this.removeTurntable(i)}\n                            removeDisk={(diskIndex) => this.props.removeDisk(i, diskIndex)}\n                        />)}\n                    <div style={{ display: \"flex\" }}>\n                        <StyledInput placeholder=\"new turntable name\" value={newTurntableName} onChange={this.handleNewTurnTableNameChange} />\n                        <AddButton title=\"add turntable\" disabled={!newTurntableName} onClick={this.onAddTurntableClicked} />\n                    </div>\n                </TurntablesWrapper>\n                <SwitchWrapper>\n                    <Switch\n                        leftDisk={leftSwitchDisk}\n                        rightDisk={rightSwitchDisk}\n                        handleSwitchVolumeChange={this.handleSwitchVolumeChange}\n                    />\n                </SwitchWrapper>\n            </Wrapper>\n        )\n    }\n}\n\nconst StyledInput = styled.input`\n    color: ${({ theme }) => theme.text};\n    background: none;\n    border: none;\n    font-size: 0.85rem;\n    \n    ::placeholder {\n        font-style: italic;\n        color: grey;\n        text-decoration: underline;\n    }\n`\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: relative;\n    width: 100%;\n    height: 100%;\n    overflow-y: hidden;\n`\n\nconst SwitchWrapper = styled.div`\n    justify-content: center;\n    display: flex;\n    position: absolute;\n    bottom: 1.25rem;\n`\n\nconst TurntablesWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    overflow: scroll;\n    width: 100%;\n    border-top: 1px solid grey;\n`\n\nexport default Rack;","import React from 'react'\nimport styled from 'styled-components'\nimport { SaveButton } from './Buttons'\n\nconst ProjectJSONEdit = (props) => {\n\n  const { isInputValid, projectStr, handleProjectChange, onApplyClicked } = props\n  return <Wrapper>\n    <div style={{ position: \"relative\" }}>\n      <h3>Edit project as JSON</h3>\n      <div style={{ position: \"relative\", width: \"800px\", height: \"400px\", }}>\n        <StyledTextarea\n          value={projectStr}\n          onChange={handleProjectChange} />\n        <SaveButton\n          title=\"apply and save changes\"\n          style={{ position: \"absolute\", top: \"0.25rem\", right: \"0.25rem\", fontSize: \"1.25rem\" }}\n          disabled={!isInputValid}\n          onClick={onApplyClicked} />\n      </div>\n    </div>\n  </Wrapper>\n}\n\nconst Wrapper = styled.div`\n  box-shadow: 0px 0px 6px 1px ${({ theme }) => theme.shadow};\n  border-radius: 5px;\n  position: absolute;\n  z-index: 1;\n  background-color: ${({ theme }) => theme.body}\n`\n\nconst StyledTextarea = styled.textarea`\n  position: absolute;\n  border-radius: 5px;\n  width: -webkit-fill-available;\n  height: -webkit-fill-available;\n  background-color: black;\n  color: white;\n`\nexport default ProjectJSONEdit","import React, { Component } from 'react';\n\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './components/Themes';\nimport { GlobalStyles } from './components/globalStyles';\n\nimport demoProjects from './demoProjects.json'\nimport Rack from './components/Rack'\nimport ProjectJSONEdit from './components/ProjectJSONEdit'\nimport { TypicalButton, LightsButton } from './components/Buttons'\n\n\nconst DEFAULT_PROJECT = \"175\"\n\nclass App extends Component {\n\n  state = {\n    project: {},\n    projectStr: \"\",\n    isProjectJSONEditShown: false,\n    selectedProject: DEFAULT_PROJECT,\n    isDarkTheme: true\n  }\n\n  getSavedMusic = () => {\n    try {\n      return JSON.parse(window.localStorage[\"project\"])\n    } catch {\n      return undefined\n    }\n  }\n\n  componentDidMount() {\n    const turntablesLocalStorage = null // this.getSavedMusic()\n\n    const isDarkTheme = window.localStorage[\"isDarkTheme\"] === \"true\"\n\n    const project = turntablesLocalStorage ? { turntables: turntablesLocalStorage } : demoProjects[this.state.selectedProject]\n\n    // const originSrc = \"https://www.dropbox.com/s/0zh9980kcvu0kva/Mi%20gran%20noche%20%28NUEVOEXITO.ORG%29.mp3?dl=0\"\n    this.setProject(project)\n    this.setState({ isDarkTheme })\n  }\n\n  setTurntables = (turntables) => {\n    let project = this.state.project\n    project.turntables = turntables\n    this.setProject(project)\n  }\n\n  setProject = (project) => {\n    this.setState({\n      project,\n      projectStr: JSON.stringify(project, null, \"\\t\")\n    })\n    window.localStorage[\"project\"] = JSON.stringify(project)\n  }\n\n  handleturntablesChange = (e) => {\n    const projectStr = e.target.value\n    this.setState({ projectStr: projectStr })\n  }\n\n  onApplyClicked = () => {\n    const project = JSON.parse(this.state.projectStr)\n    this.setProject(project)\n  }\n\n  addDisk = (turntableIndex, newDiskName, newDiskSrc) => {\n    let turntables = this.state.project.turntables\n    turntables[turntableIndex].disks.push({ name: newDiskName, src: newDiskSrc.replace(\"www.dropbox.com\", \"dl.dropboxusercontent.com\") })\n    this.setTurntables(turntables)\n  }\n\n  removeDisk = (turntableIndex, diskIndex) => {\n    let turntables = this.state.project.turntables\n    turntables[turntableIndex].disks.splice(diskIndex, 1)\n    this.setTurntables(turntables)\n  }\n\n  addTurntable = (newTurntableName) => {\n    let turntables = this.state.project.turntables\n    turntables.push({ name: newTurntableName, disks: [] })\n    this.setTurntables(turntables)\n  }\n\n  removeTurntable = (turntableIndex) => {\n    let turntables = this.state.project.turntables\n    turntables.splice(turntableIndex, 1)\n    this.setTurntables(turntables)\n  }\n\n  toggleProjectJSONEdit = () => {\n    this.setState({ isProjectJSONEditShown: !this.state.isProjectJSONEditShown })\n  }\n\n  toggleTheme = () => {\n    const isDarkTheme = !this.state.isDarkTheme\n    this.setState({ isDarkTheme })\n    window.localStorage[\"isDarkTheme\"] = isDarkTheme\n  }\n\n  handleSelectedProjectChange = (e) => {\n    const value = e.target.value\n    this.setState({ selectedProject: value })\n    this.setProject(demoProjects[value])\n  }\n\n  render() {\n    const { project, projectStr,\n      isProjectJSONEditShown, selectedProject, isDarkTheme\n    } = this.state\n    let isInputValid = true\n    try {\n      JSON.parse(projectStr)\n    } catch {\n      isInputValid = false\n    }\n\n    if (!project) return <div>Loading</div>\n\n    return (\n      <div style={{ width: \"100%\", height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n        <ThemeProvider theme={isDarkTheme ? darkTheme : lightTheme}>\n          <GlobalStyles />\n          <div>\n            <TypicalButton onClick={this.toggleProjectJSONEdit} style={{ padding: \"0.25rem\", fontFamily: \"monospace\", fontWeight: \"bolder\" }}>{\"</>\"}</TypicalButton>\n            {isProjectJSONEditShown &&\n              <ProjectJSONEdit\n                handleProjectChange={this.handleturntablesChange}\n                isInputValid={isInputValid}\n                projectStr={projectStr}\n                onApplyClicked={this.onApplyClicked}\n              />}\n            <select\n              name=\"selectedProject\"\n              onChange={this.handleSelectedProjectChange}\n              value={selectedProject}\n            >{Object.keys(demoProjects).map(projectName =>\n              <option key={projectName} value={projectName}>{projectName}</option>\n            )}\n            </select>\n            <LightsButton title=\"toggle dark theme\" onClick={this.toggleTheme} style={{ float: \"right\" }} isActive={isDarkTheme} />\n          </div>\n          {project.turntables && <Rack\n            title={project.name}\n            turntables={project.turntables}\n            addDisk={this.addDisk}\n            removeDisk={this.removeDisk}\n            addTurntable={this.addTurntable}\n            removeTurntable={this.removeTurntable}\n          />\n          }\n        </ThemeProvider>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}